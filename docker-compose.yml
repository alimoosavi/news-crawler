version: '3'
services:
  chrome:
    image: selenium/standalone-chrome:4.15.0
    container_name: webdriver
    ports:
      - "4444:4444"
    shm_size: "512m"
    environment:
      - SE_NODE_MAX_SESSIONS=${SE_NODE_MAX_SESSIONS}
      - SE_NODE_SESSION_TIMEOUT=${SE_NODE_SESSION_TIMEOUT}
    # resource hints (ignored in v3 but kept for readability)

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:${REDPANDA_VERSION}
    container_name: broker
    restart: always
    command:
      - redpanda start
      - --smp ${REDPANDA_SMP}
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:${REDPANDA_INTERNAL_PORT},external://0.0.0.0:${REDPANDA_EXTERNAL_PORT}
      - --advertise-kafka-addr internal://redpanda:${REDPANDA_INTERNAL_PORT},external://localhost:${REDPANDA_EXTERNAL_PORT}
    ports:
      - "${REDPANDA_EXTERNAL_PORT}:${REDPANDA_EXTERNAL_PORT}"
      - "${REDPANDA_ADMIN_PORT}:${REDPANDA_ADMIN_PORT}"
    volumes:
      - ./data/redpanda:/var/lib/redpanda/data

  redpanda_console:
    image: docker.redpanda.com/redpandadata/console:${REDPANDA_CONSOLE_VERSION}
    container_name: broker-console
    restart: always
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml && /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:${REDPANDA_INTERNAL_PORT}"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:${REDPANDA_ADMIN_PORT}"]
    ports:
      - "${REDPANDA_CONSOLE_PORT}:8080"
    depends_on:
      - redpanda

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  redis_data:
